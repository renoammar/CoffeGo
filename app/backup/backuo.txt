"use server";
import { db } from "./db";
import Card from "./componet/Card";
import { getCart } from "./action";
export default async function Home() {
  const menuItems = await db.menuItem.findMany();
  const cart = await getCart();

  const renderedMenuItems = menuItems.map((item) => (
    <Card
      key={item.id}
      description={item.description}
      name={item.name}
      image={item.image}
      price={item.price}
      id={item.id}
    />
  ));

  return (
    <main className="h-screen w-full flex justify-center items-center">
      <div className="h-[80%] w-[80%] flex justify-center items-center gap-12 shadow-xl ">
        {renderedMenuItems}
      </div>
    </main>
  );
}
//api search
// app/api/menuItemsByCategory/route.ts
import { NextRequest, NextResponse } from "next/server";
import { db } from "@/app/db";

export const dynamic = "force-dynamic";

export async function GET(request: NextRequest) {
  const { searchParams } = new URL(request.url);
  const search = searchParams.get("search") || "";
  const category = searchParams.get("category") || "";

  const validCategories = ["coffee", "non-coffee beverage", "food"];
  const categoryFilter = category
    ? { category: category }
    : { category: { in: validCategories } };

  const items = await db.menuItem.findMany({
    where: {
      AND: [
        categoryFilter,
        {
          OR: [
            { category: { contains: search, mode: "insensitive" } },
            { name: { contains: search, mode: "insensitive" } },
          ],
        },
      ],
    },
  });

  return NextResponse.json(items);
}
